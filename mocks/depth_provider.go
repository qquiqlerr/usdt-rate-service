// Code generated by mockery v2.53.4. DO NOT EDIT.

package mocks

import (
	context "context"
	models "usdt-rate-service/internal/models"

	mock "github.com/stretchr/testify/mock"
)

// MockDepthProvider is an autogenerated mock type for the DepthProvider type
type MockDepthProvider struct {
	mock.Mock
}

type MockDepthProvider_Expecter struct {
	mock *mock.Mock
}

func (_m *MockDepthProvider) EXPECT() *MockDepthProvider_Expecter {
	return &MockDepthProvider_Expecter{mock: &_m.Mock}
}

// GetDepth provides a mock function with given fields: ctx, market
func (_m *MockDepthProvider) GetDepth(ctx context.Context, market string) (*models.Depth, error) {
	ret := _m.Called(ctx, market)

	if len(ret) == 0 {
		panic("no return value specified for GetDepth")
	}

	var r0 *models.Depth
	var r1 error
	if rf, ok := ret.Get(0).(func(context.Context, string) (*models.Depth, error)); ok {
		return rf(ctx, market)
	}
	if rf, ok := ret.Get(0).(func(context.Context, string) *models.Depth); ok {
		r0 = rf(ctx, market)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Depth)
		}
	}

	if rf, ok := ret.Get(1).(func(context.Context, string) error); ok {
		r1 = rf(ctx, market)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// MockDepthProvider_GetDepth_Call is a *mock.Call that shadows Run/Return methods with type explicit version for method 'GetDepth'
type MockDepthProvider_GetDepth_Call struct {
	*mock.Call
}

// GetDepth is a helper method to define mock.On call
//   - ctx context.Context
//   - market string
func (_e *MockDepthProvider_Expecter) GetDepth(ctx interface{}, market interface{}) *MockDepthProvider_GetDepth_Call {
	return &MockDepthProvider_GetDepth_Call{Call: _e.mock.On("GetDepth", ctx, market)}
}

func (_c *MockDepthProvider_GetDepth_Call) Run(run func(ctx context.Context, market string)) *MockDepthProvider_GetDepth_Call {
	_c.Call.Run(func(args mock.Arguments) {
		run(args[0].(context.Context), args[1].(string))
	})
	return _c
}

func (_c *MockDepthProvider_GetDepth_Call) Return(_a0 *models.Depth, _a1 error) *MockDepthProvider_GetDepth_Call {
	_c.Call.Return(_a0, _a1)
	return _c
}

func (_c *MockDepthProvider_GetDepth_Call) RunAndReturn(run func(context.Context, string) (*models.Depth, error)) *MockDepthProvider_GetDepth_Call {
	_c.Call.Return(run)
	return _c
}

// NewMockDepthProvider creates a new instance of MockDepthProvider. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewMockDepthProvider(t interface {
	mock.TestingT
	Cleanup(func())
}) *MockDepthProvider {
	mock := &MockDepthProvider{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
